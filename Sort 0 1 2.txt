Problem statement
You have been given an integer array/list(ARR) of size 'N'. It only contains 0s, 1s and 2s. Write a solution to sort this array/list.

Note :
Try to solve the problem in 'Single Scan'. ' Single Scan' refers to iterating over the array/list just once or to put it in other words, you will be visiting each element in the array/list just once.
Detailed explanation ( Input/output format, Notes, Images )
Constraints :
1 <= T <= 10
1 <= N <= (5 * (10 ^ 5))
0 <= ARR[i] <= 2

Where 'N' is the size of the given array/list.
And, ARR[i] denotes the i-th element in the array/list.

Time Limit: 1sec 
Sample Input 1 :
2
6
0 1 2 2 1 0
7
0 1 2 1 2 1 2
Sample Output 1 :
0 0 1 1 2 2
0 1 1 1 2 2 2
Sample Input 2 :
2
7
2 2 2 1 1 1 0
6
2 1 2 0 1 0
Sample Output 2 :
0 1 1 1 2 2 2
0 0 1 1 2 2

-----------------------------------------------------Code--------------------------------------------------------

import java.util.* ;
import java.io.*; 
public class Solution 
{
    public static void sort012(int[] arr)
    {
        //Write your code here
        int nextZero = 0;
        int nextTwo = arr.length-1;
        int j = 0;
        while(j<=nextTwo){
            if(arr[j]==0){
                int temp = arr[nextZero];
                arr[nextZero] = arr[j];
                arr[j] = temp;
                nextZero++;
                j++;
            }
            else if(arr[j]==2){
                int temp = arr[nextTwo];
                arr[nextTwo] = arr[j];
                arr[j] = temp;
                nextTwo--;
            }
            else{
                j++;
            }
        }

    }
}